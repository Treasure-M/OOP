# -*- coding: utf-8 -*-
"""OOP.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oG9iv8UngKd4km89_vBX1xVpq0eBg4ie
"""

# Base class
class Character:
    def __init__(self, name, origin):
        self.name = name
        self.origin = origin

    def describe(self):
        print(f"{self.name} comes from {self.origin}.")

# Subclass with inheritance and encapsulation
class Superhero(Character):
    def __init__(self, name, origin, power, alias):
        super().__init__(name, origin)
        self._power = power  # Encapsulated attribute
        self.alias = alias

    def reveal_identity(self):
        print(f"{self.alias} is actually {self.name}!")

    def use_power(self):
        print(f"{self.alias} uses {self._power} to save the day!")

# Example usage
hero = Superhero("Clark Kent", "Krypton", "Super Strength", "Superman")
hero.describe()
hero.reveal_identity()
hero.use_power()

class Vehicle:
    def move(self):
        print("Moving...")

class Car(Vehicle):
    def move(self):
        print("Driving üöó")

class Plane(Vehicle):
    def move(self):
        print("Flying ‚úàÔ∏è")

class Boat(Vehicle):
    def move(self):
        print("Sailing üö¢")

# Polymorphic behavior
vehicles = [Car(), Plane(), Boat()]
for v in vehicles:
    v.move()